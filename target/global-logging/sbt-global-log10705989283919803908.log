[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Domin\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Domin\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.3 (Amazon.com Inc. Java 18.0.2)
[debug]       Load.loadUnit: plugins took 83.3261ms
[debug]       Load.loadUnit: defsScala took 0.2555ms
[debug] [Loading] Scanning directory C:\Users\Domin\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Domin\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.6922 ms
[debug]           Load.resolveProject(global-plugins) took 44.2417ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Domin\.sbt\1.0\plugins, plugins: List(<none>))) took 86.0087ms
[debug] [Loading] Done in C:\Users\Domin\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 110.7684ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2741ms
[debug]     Load.loadUnit(file:/C:/Users/Domin/.sbt/1.0/plugins/, ...) took 203.7064ms
[debug]   Load.apply: load took 380.0533ms
[debug]   Load.apply: resolveProjects took 5.1472ms
[debug]   Load.apply: finalTransforms took 58.2916ms
[debug]   Load.apply: config.delegates took 7.2847ms
[debug]   Load.apply: Def.make(settings)... took 382.1049ms
[debug]   Load.apply: structureIndex took 81.3609ms
[debug]   Load.apply: mkStreams took 1.2734ms
[info] loading global plugins from C:\Users\Domin\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1905.5958ms
[debug]           Load.loadUnit: plugins took 19.8121ms
[debug]           Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Users\Domin\Documents\Studia\4_semestr\Programowanie_w_jezyku_Scala\ants\project
[debug]             Load.loadUnit: mkEval took 4.8173ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Domin\Documents\Studia\4_semestr\Programowanie_w_jezyku_Scala\ants\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9369 ms
[info] loading settings for project ants-build from idea2.sbt ...
[debug]               Load.resolveProject(ants-build) took 2.1979ms
[debug]             Load.loadTransitive: finalizeProject(Project(id ants-build, base: C:\Users\Domin\Documents\Studia\4_semestr\Programowanie_w_jezyku_Scala\ants\project, plugins: List(<none>))) took 4.5632ms
[debug] [Loading] Done in C:\Users\Domin\Documents\Studia\4_semestr\Programowanie_w_jezyku_Scala\ants\project, returning: (ants-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 117.8029ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.6378ms
[debug]         Load.loadUnit(file:/C:/Users/Domin/Documents/Studia/4_semestr/Programowanie_w_jezyku_Scala/ants/project/, ...) took 143.183ms
[debug]       Load.apply: load took 144.4304ms
[debug]       Load.apply: resolveProjects took 0.1547ms
[debug]       Load.apply: finalTransforms took 8.7605ms
[debug]       Load.apply: config.delegates took 0.345ms
[debug]       Load.apply: Def.make(settings)... took 75.284ms
[debug]       Load.apply: structureIndex took 26.1035ms
[debug]       Load.apply: mkStreams took 0.0034ms
[info] loading project definition from C:\Users\Domin\Documents\Studia\4_semestr\Programowanie_w_jezyku_Scala\ants\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 444.9258ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\Domin\Documents\Studia\4_semestr\Programowanie_w_jezyku_Scala\ants
[debug]       Load.loadUnit: mkEval took 0.2103ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6164 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 35.2079ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Domin\Documents\Studia\4_semestr\Programowanie_w_jezyku_Scala\ants, plugins: List(<none>))) took 38.4958ms
[debug] [Loading] Done in C:\Users\Domin\Documents\Studia\4_semestr\Programowanie_w_jezyku_Scala\ants, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 109.0005ms
[debug]     Load.loadUnit: cleanEvalClasses took 17.6419ms
[debug]   Load.loadUnit(file:/C:/Users/Domin/Documents/Studia/4_semestr/Programowanie_w_jezyku_Scala/ants/, ...) took 572.6024ms
[debug] Load.apply: load took 574.2328ms
[debug] Load.apply: resolveProjects took 0.1365ms
[debug] Load.apply: finalTransforms took 21.5767ms
[debug] Load.apply: config.delegates took 0.3627ms
[debug] Load.apply: Def.make(settings)... took 62.7468ms
[debug] Load.apply: structureIndex took 23.746ms
[debug] Load.apply: mkStreams took 0.0031ms
[info] set current project to ants (in build file:/C:/Users/Domin/Documents/Studia/4_semestr/Programowanie_w_jezyku_Scala/ants/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 6160 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 6160, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ants (in build file:/C:/Users/Domin/Documents/Studia/4_semestr/Programowanie_w_jezyku_Scala/ants/)
[debug] > Exec(idea-shell, None, None)
